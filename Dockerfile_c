# Base image from https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/debian/Dockerfile
# Since it's not published on Dockerhub yet, we build it as separate stage

FROM debian:buster-slim AS continuumio-miniconda3-debian

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN apt-get update --fix-missing && \
    apt-get install -y wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git && \
    apt-get clean

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.7.12-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipsy && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    /opt/conda/bin/conda clean -afy

CMD [ "/bin/bash" ]


###############################################################################


#
# Next, build the actual image that will run in production.

FROM continuumio-miniconda3-debian

# FROM continuumio/miniconda3

WORKDIR /app

# Create the environment:
COPY environment.yml .
RUN conda env create -f environment.yml

# Make RUN commands use the new environment:
SHELL ["conda", "run", "-n", "pyviz37", "/bin/bash", "-c"]

# Make sure the environment is activated:
RUN echo "Make sure geoviews is installed:"
RUN python -c "import geoviews"

# The code to run when container is started:
COPY run.py .
COPY bin bin/
COPY data data/
COPY runpy2.py .

#CMD ["bokeh", "serve", "run.py", "--address", "0.0.0.0"]
ENTRYPOINT [ "conda", "bokeh", "serve", "run.py",]
#ENTRYPOINT ["conda", "run", "-n", "pyviz37"]
# ENTRYPOINT ["conda", "run", "-n", "pyviz37", "python", "runpy2.py"]
#ENTRYPOINT ["conda", "run", "-n", "pyviz37", "bokeh", "serve", "run.py", "--address", "0.0.0.0"]
